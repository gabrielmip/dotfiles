# vim: filetype=i3config

set $mod Mod4
set $alt Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Noto Sans 12

focus_follows_mouse no

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# Reference: https://faq.i3wm.org/question/239/how-do-i-suspendlockscreen-and-logout.1.html
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id bash ~/.config/i3/exit.sh lock, mode "default"
    bindsym e exec --no-startup-id bash ~/.config/i3/exit.sh logout, mode "default"
    bindsym s exec --no-startup-id bash ~/.config/i3/exit.sh suspend, mode "default"
    bindsym h exec --no-startup-id bash ~/.config/i3/exit.sh hibernate, mode "default"
    bindsym r exec --no-startup-id bash ~/.config/i3/exit.sh reboot, mode "default"
    bindsym Shift+s exec --no-startup-id bash ~/.config/i3/exit.sh shutdown, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Pause mode "$mode_system"
bindsym $mod+Shift+e mode "$mode_system"

set $mode_displays Displays (m) external monitor only, (l) laptop only, (b) both
mode "$mode_displays" {
    # TODO: use the scripts arandr can generate
    # maybe add them to a dmenu selector? (nice)
    bindsym m exec --no-startup-id xrandr --output HDMI-A-0 --auto && xrandr --output eDP --off && feh --bg-scale /home/gabriel/Dotfiles/wallpaper.jpg, mode "default"
    bindsym l exec --no-startup-id xrandr --output eDP --auto && xrandr --output HDMI-A-0 --off && feh --bg-scale /home/gabriel/Dotfiles/wallpaper.jpg, mode "default"
    # bindsym b exec --no-startup-id xrandr --output eDP --auto && xrandr --output HDMI-A-0 --left-of eDP && feh --bg-scale /home/gabriel/Dotfiles/wallpaper.jpg, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+m mode "$mode_displays"

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# clipboard management and applet
exec --no-startup-id klipper

# bluetooth management and applet
exec --no-startup-id blueman-applet

# notifications
exec --no-startup-id dunst

set $mode_notification Notification (p) pause, (u) unpause, (c) close all
mode "$mode_notification" {
    bindsym p exec dunstctl set-paused true, mode "default"
    bindsym u exec dunstctl set-paused false, mode "default"
    bindsym c exec dunstctl close-all, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+n mode "$mode_notification"
bindsym $mod+n exec dunstctl history-pop

# pcloud
exec --no-startup-id pcloud

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
bindsym Shift+F9 exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
bindsym F9 exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ 0
bindsym --release F9 exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ 1

# Setup pulseaudio applet
exec --no-startup-id pasystray
exec --no-startup-id mictray

exec --no-startup-id redshift-gtk

# Screen brightness with keyboard
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +5%
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 5%-

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec konsole

# default file explorer
bindsym $mod+e exec --no-startup-id nemo

# Run printscreen app
bindsym F10 exec spectacle -f -b
bindsym Shift+F10 exec spectacle -r -b

# kill focused window
bindsym $mod+Shift+q kill
bindsym $alt+F4 kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id ~/Dotfiles/dmenu/dmenu_recent.sh
bindsym $alt+space exec --no-startup-id ~/Dotfiles/dmenu/dmenu_recent.sh

# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec rofi -modi drun,run -show drun
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# enabling compositor for window transparency
# exec_always --no-startup-id picom -bcC
exec_always --no-startup-id picom

# wallpaper and colors
# exec --no-startup-id xsetroot -solid "#15434c"
exec --no-startup-id feh --bg-scale /home/gabriel/Dotfiles/wallpaper.jpg

# i3-gaps
gaps inner 22
gaps outer 0
# smart_gaps off
new_window pixel 2
new_float pixel 0

# By default adding border for windows
for_window [class=.*] border normal 1

# Zoom compatibility
# Set Zoom notification window to floating with no focus
for_window [title="^zoom\s?$"] floating enable
no_focus [title="^zoom\s?$"]
# For meetings that you have joined via a link
for_window [title="^join\?action=join.*$"] floating enable
no_focus [title="^join\?action=join.*$"]

# gnome-pomodoro settings and statistics window
for_window [title="^Pomodoro$"] floating enable

for_window [class="Nemo"] floating enable
for_window [class="ark"] floating enable
for_window [class="Blueman-manager"] floating enable
for_window [class="Pavucontrol"] floating enable

for_window [class="yakuake"] floating enable
for_window [class="systemsettings"] floating enable
for_window [class="krunner"] floating enable
for_window [class="dolphin"] floating enable
for_window [class="Kmix"] floating enable
for_window [class="Klipper"] floating enable
for_window [class="(?i)*nextcloud*"] floating disable

for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable

# change focus
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+h focus left

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move down 20 px
bindsym $mod+Shift+k move up 20 px
bindsym $mod+Shift+l move right 20 px
bindsym $mod+Shift+h move left 20 px

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left 20 px
bindsym $mod+Shift+Down move down 20 px
bindsym $mod+Shift+Up move up 20 px
bindsym $mod+Shift+Right move right 20 px

# split in horizontal orientation
bindsym $mod+w split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Cycle through active workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# presetting screens for workspaces
workspace $ws1 output primary
workspace $ws2 output primary
workspace $ws3 output primary
workspace $ws4 output primary
workspace $ws5 output primary
workspace $ws6 output primary
workspace $ws7 output primary
workspace $ws8 output down
workspace $ws9 output primary
workspace $ws10 output primary

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# resize window (you can also use the mouse for that)
mode "resize" {
    # memorization:
    # j is grow, k is shrink
    # to do it vertically, prepend with shift
    bindsym j resize grow width 5 px or 5 ppt
    bindsym k resize shrink width 5 px or 5 ppt
    bindsym Shift+j resize grow height 5 px or 5 ppt
    bindsym Shift+k resize shrink height 5 px or 5 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

set $mode_pomodoro Pomodoro (s) start, (q) quit, (k) skip, (t) pause
mode "$mode_pomodoro" {
    bindsym s exec "i3-gnome-pomodoro start", mode "default"
    bindsym k exec "i3-gnome-pomodoro skip", mode "default"
    bindsym q exec "i3-gnome-pomodoro stop", mode "default"
    bindsym t exec "i3-gnome-pomodoro pause", mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+p mode "$mode_pomodoro"

# https://github.com/catppuccin/i3 (frappé)
set $rosewater #f4dbd6
set $flamingo #f0c6c6
set $pink #f5bde6
set $mauve #c6a0f6
set $red #ed8796
set $maroon #ee99a0
set $peach #f5a97f
set $yellow #eed49f
set $green #a6da95
set $teal #8bd5ca
set $sky #91d7e3
set $sapphire #7dc4e4
set $blue #8aadf4
set $lavender #b7bdf8
set $text #cad3f5
set $subtext1 #b8c0e0
set $subtext0 #a5adcb
set $overlay2 #939ab7
set $overlay1 #8087a2
set $overlay0 #6e738d
set $surface2 #5b6078
set $surface1 #494d64
set $surface0 #363a4f
set $base #24273a
set $mantle #1e2030
set $crust #181926

# target                 title     bg    text   indicator  border
client.focused           $lavender $base $text  $rosewater $lavender
client.focused_inactive  $overlay0 $base $text  $rosewater $overlay0
client.unfocused         $overlay0 $base $text  $rosewater $overlay0
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command i3status -c ~/Dotfiles/i3status/config | ~/Dotfiles/i3status/custom_sections.py
    colors {
        background         $base
        statusline         $text
        focused_statusline $text
        focused_separator  $surface2

        # target           border bg        text
        focused_workspace  $base  $mauve    $crust
        active_workspace   $base  $surface2 $text
        inactive_workspace $base  $base     $text
        urgent_workspace   $base  $red      $crust
    }
}
